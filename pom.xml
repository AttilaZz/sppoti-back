<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.sppoti</groupId>
    <artifactId>sppoti</artifactId>
    <version>${sppoti.project.version}</version>

    <description>Sppoti server web application</description>
    <url>https://www.sppoti.com</url>

    <packaging>pom</packaging>

    <name>Sppoti Web Application</name>

    <properties>
        <java.version>1.8</java.version>
        <sppoti.project.version>R02.09</sppoti.project.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <org.apache.commons.version>3.5</org.apache.commons.version>
        <commons.beanutils.version>1.9.2</commons.beanutils.version>
        <com.fasterxml.jackson.version>2.8.8</com.fasterxml.jackson.version>
        <spring.boot.version>1.5.4.RELEASE</spring.boot.version>
        <apache.common.io.version>2.5</apache.common.io.version>
        <apache.common.lang.version>2.6</apache.common.lang.version>
        <querydsl.version>4.1.4</querydsl.version>
        <quartz.version>2.3.0</quartz.version>
        <org.apache.maven.wagon.version>2.12</org.apache.maven.wagon.version>
        <com.mysema.maven.version>1.1.3</com.mysema.maven.version>
        <org.springframework.session.version>1.3.1.RELEASE</org.springframework.session.version>
        <redis.lettuce.version>sppoti-image</redis.lettuce.version>
        <redis.lettuce.version>4.4.1.Final</redis.lettuce.version>
        <spring.social.facebook.version>2.0.3.RELEASE</spring.social.facebook.version>
        <docker.image.prefix>wdjenane/sppoti-back</docker.image.prefix>
        <docker.maven.plugin.version>1.0.0</docker.maven.plugin.version>
        <com.google.firebase.version>5.5.0</com.google.firebase.version>
        <org.apache.maven.plugin.version>2.5.3</org.apache.maven.plugin.version>

        <environment>developpement</environment>
    </properties>

    <modules>
        <module>SppotiCommons</module>
        <module>SppotiRepository</module>
        <module>SppotiBusiness</module>
        <module>SppotiRestApi</module>
        <module>SppotiRunApp</module>
        <module>SppotiBatch</module>
    </modules>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>1.5.3.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>

    <scm>
        <developerConnection>scm:svn:https://svn.mycompany.com/repos/myapplication/trunk/mycomponent/
        </developerConnection>
    </scm>

    <distributionManagement>
        <repository>
            <id>ssh-repository</id>
            <url>scpexe://ubuntu@ec2-34-253-168-21.eu-west-1.compute.amazonaws.com/home/ubuntu/sppoti/</url>
            <uniqueVersion>false</uniqueVersion>
        </repository>
    </distributionManagement>

    <repositories>
        <repository>
            <id>spring-releases</id>
            <name>Spring Milestone Repository</name>
            <url>https://repo.spring.io/libs-release</url>
        </repository>
    </repositories>

    <pluginRepositories>
        <pluginRepository>
            <id>spring-releases</id>
            <name>Spring Milestone Repository</name>
            <url>https://repo.spring.io/libs-release</url>
        </pluginRepository>
    </pluginRepositories>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>com.sppoti</groupId>
                <artifactId>SppotiRestApi</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.sppoti</groupId>
                <artifactId>SppotiRepository</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.sppoti</groupId>
                <artifactId>SppotiCommons</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.sppoti</groupId>
                <artifactId>SppotiBusiness</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-beanutils</groupId>
                <artifactId>commons-beanutils</artifactId>
                <version>${commons.beanutils.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-databind</artifactId>
                <version>${com.fasterxml.jackson.version}</version>
            </dependency>

            <!--APACHE-->
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>${org.apache.commons.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-io</groupId>
                <artifactId>commons-io</artifactId>
                <version>${apache.common.io.version}</version>
            </dependency>

            <!--JPA DSL-QUERY-->
            <dependency>
                <groupId>com.querydsl</groupId>
                <artifactId>querydsl-jpa</artifactId>
                <version>${querydsl.version}</version>
            </dependency>

            <!-- Quartz framework -->
            <dependency>
                <groupId>org.quartz-scheduler</groupId>
                <artifactId>quartz</artifactId>
                <version>${quartz.version}</version>
            </dependency>

            <!-- spring session -->
            <dependency>
                <groupId>org.springframework.session</groupId>
                <artifactId>spring-session</artifactId>
                <version>${org.springframework.session.version}</version>
            </dependency>
            <!-- redis -->
            <dependency>
                <groupId>biz.paluch.redis</groupId>
                <artifactId>lettuce</artifactId>
                <version>${redis.lettuce.version}</version>
            </dependency>
            <!-- https://mvnrepository.com/artifact/com.google.firebase/firebase-server-sdk -->
            <dependency>
                <groupId>com.google.firebase</groupId>
                <artifactId>firebase-admin</artifactId>
                <version>${com.google.firebase.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
            <optional>true</optional>
        </dependency>
        <!--LOG4J2-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-logging</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-log4j2</artifactId>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <!--Compile sources plugin-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                </configuration>
            </plugin>
            <!--Deploy plugin-->
            <!--<plugin>-->
            <!--<groupId>org.apache.maven.plugins</groupId>-->
            <!--<artifactId>maven-deploy-plugin</artifactId>-->
            <!--<executions>-->
            <!--<execution>-->
            <!--<goals>-->
            <!--<goal>deploy-file</goal>-->
            <!--</goals>-->
            <!--<phase>deploy</phase>-->
            <!--<configuration>-->
            <!--<file>SppotiRunApp/target/sppoti-application-${environment}.war</file>-->
            <!--<repositoryId>ssh-repository</repositoryId>-->
            <!--<url>-->
            <!--scp://ubuntu@ec2-34-253-168-21.eu-west-1.compute.amazonaws.com/home/ubuntu/sppoti/-->
            <!--</url>-->
            <!--</configuration>-->
            <!--</execution>-->
            <!--</executions>-->
            <!--</plugin>-->
            <!--Filter resources in application.properties-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <configuration>
                    <delimiters>
                        <delimiter>@</delimiter>
                    </delimiters>
                    <useDefaultDelimiters>false</useDefaultDelimiters>
                </configuration>
            </plugin>
            <!-- Maven release plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-release-plugin</artifactId>
                <version>${org.apache.maven.plugin.version}</version>
            </plugin>
        </plugins>

        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>com.spotify</groupId>
                    <artifactId>docker-maven-plugin</artifactId>
                    <version>${docker.maven.plugin.version}</version>
                    <executions>
                        <execution>
                            <id>build</id>
                            <phase>package</phase>
                            <goals>
                                <goal>build</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>push</id>
                            <phase>install</phase>
                            <goals>
                                <goal>build</goal>
                                <goal>push</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <imageName>${docker.image.prefix}</imageName>
                        <dockerDirectory>src/main/docker</dockerDirectory>
                        <serverId>docker-hub</serverId>
                        <registryUrl>https://index.docker.io/v1/</registryUrl>
                        <imageTags>
                            <imageTag>${project.version}</imageTag>
                        </imageTags>
                        <resources>
                            <!--INCLUDE-->
                            <resource>
                                <targetPath>/</targetPath>
                                <directory>${project.basedir}/target</directory>
                                <include>${project.build.finalName}.war</include>
                            </resource>
                        </resources>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>

        <extensions>
            <!-- Enabling the use of SSH -->
            <extension>
                <groupId>org.apache.maven.wagon</groupId>
                <artifactId>wagon-ssh-external</artifactId>
                <version>${org.apache.maven.wagon.version}</version>
            </extension>
        </extensions>
    </build>

</project>